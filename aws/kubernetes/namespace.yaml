apiVersion: v1
kind: Namespace
metadata:
  name: chat-microservices
  labels:
    name: chat-microservices
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: microservices-config
  namespace: chat-microservices
data:
  eureka.default.zone: "http://discovery-server:8761/eureka/"
  database.host: "mysql-service"
  database.port: "3306"
  database.name: "chat_microservices"
  redis.host: "redis-service"
  redis.port: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: microservices-secrets
  namespace: chat-microservices
type: Opaque
data:
  database.username: Y2hhdHVzZXI=  # chatuser
  database.password: Q2hhdFBhc3NAMTIz  # ChatPass@123
  jwt.secret: bXlfc2VjcmV0X2tleV9mb3Jfand0X3Rva2Vu  # my_secret_key_for_jwt_token
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: microservices-sa
  namespace: chat-microservices
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::YOUR_ACCOUNT_ID:role/ChatMicroservicesEKSRole
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: microservices-role
  namespace: chat-microservices
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: microservices-rolebinding
  namespace: chat-microservices
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: microservices-role
subjects:
- kind: ServiceAccount
  name: microservices-sa
  namespace: chat-microservices